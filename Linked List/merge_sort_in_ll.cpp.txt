Node* findmid(Node* &head){
        Node* slow=head;
        Node* fast=head->next;
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
    Node* merge(Node* &head1,Node* &head2){
        if(head1==NULL){
            return head2;
        }
        if(head2==NULL){
            return head1;
        }
        Node* dum=new Node(-1);
        Node* temp=dum;
        while(head1!=NULL && head2!=NULL){
            if(head1->data>head2->data){
                temp->next=head2;
                temp=head2;
                head2=head2->next;
            }
            else{
                temp->next=head1;
                temp=head1;
                head1=head1->next;
            }
        }
        while(head2!=NULL){
            temp->next=head2;
            temp=head2;
            head2=head2->next;
        }
        while(head1!=NULL){
            temp->next=head1;
            temp=head1;
            head1=head1->next;
        }
        dum=dum->next;
        return dum;
    }
Node *sortLL(Node *head){
    // Write your code here.
    if(head==NULL || head->next==NULL){
        return NULL;
    }
    Node* mid=findmid(head);
    Node* right=mid->next;
    Node* left=head;
    mid->next=NULL;
    left=sortLL(left);
    right=sortLL(right);
    Node* anshead=merge(left,right);
    return anshead;
}