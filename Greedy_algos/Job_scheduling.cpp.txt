class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    static bool cmp(Job a, Job b){
        return a.profit > b.profit;
    }
    vector<int> JobScheduling(Job arr[], int n){ 
        sort(arr,arr+n,cmp);
        int maxidead=INT_MIN;
        for(int i=0;i<n;i++){
            maxidead=max(arr[i].dead,maxidead);
        }
        vector<int> schedule(maxidead+1,-1);
        int count=0;
        int profit=0;
        for(int i=0;i<n;i++){
            int currprofit=arr[i].profit;
            int currjobid=arr[i].id;
            int currdead=arr[i].dead;
            
            for(int k=currdead;k>0;k--){
                if(schedule[k]==-1){
                    count++;
                    profit+=currprofit;
                    schedule[k]=currjobid;
                    break;
                }
            }
        }
        vector<int> ans;
        ans.push_back(count);
        ans.push_back(profit);
        return ans;
    } 
};