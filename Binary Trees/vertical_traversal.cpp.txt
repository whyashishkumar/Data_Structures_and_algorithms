class Solution
{
    public:
    //Function to find the vertical order traversal of Binary Tree.
    vector<int> verticalOrder(Node *root){
        vector<int> ans;
        map<int, map<int, vector<int>>> nodes;
        queue<pair <Node*,pair<int,int>>> q;
        
        if(root==NULL){
            return ans;
        }
        q.push(make_pair(root,make_pair(0,0)));
        while(!q.empty()){
            pair<Node*,pair<int,int>> front=q.front();
            q.pop();
            Node* temp=front.first;
            int hd=front.second.first;
            int lev=front.second.second;
            
            nodes[hd][lev].push_back(temp->data);
            
            if(temp->left){
                q.push(make_pair(temp->left,make_pair(hd-1,lev+1)));
            }
            if(temp->right){
                 q.push(make_pair(temp->right,make_pair(hd+1,lev+1)));
            }
        }
        for(auto i:nodes){
            for(auto j:i.second){
                for(auto k:j.second){
                    ans.push_back(k);
                }
            }
        }
        return ans;
    }
};