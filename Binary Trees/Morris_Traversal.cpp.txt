#include<bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* left;
    node* right;
    node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
};
node* build(node* root){
    cout<<"Enter the data\n";
    int val;
    cin>>val;
    if(val==-1){
        return NULL;
    }
    root=new node(val);
    queue<node*> q;
    q.push(root);
    while(!q.empty()){
        node*temp=q.front();
        q.pop();
        cout<<"Enter the left of "<<val<<endl;
        temp->left=build(temp->left);
        cout<<"Enter the right of "<<val<<endl;
        temp->right=build(temp->right);
    }
    return root;
}
node* find(node* root){
    node* temp=root;
    temp=temp->left;
    while(temp->right!=NULL && temp->right!=root){
        temp=temp->right;
    }
    return temp;
}
void morris_traversal(node* root){
    node* curr=root;
    while(curr!=NULL){
        if(curr->left==NULL){
            cout<<curr->data<<" ";
            curr=curr->right;
        }
        else{
            node* pred=find(curr);
            if(pred->right==NULL){
                pred->right=curr;
                curr=curr->left;
            }
            else{
                pred->right=NULL;
                cout<<curr->data<<" ";
                curr=curr->right;
            }
        }
    }
}
int main(){
    node* root=NULL;
    root=build(root);
    morris_traversal(root);
    return 0;
}