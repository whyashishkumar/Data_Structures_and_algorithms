class Solution
{
    public:
    pair<bool,int> isSumTreefast(Node* root){
        if(root==NULL){
            pair<bool,int> p=make_pair(true,0);
            return p;
        }
        
        if(root->left==NULL && root->right==NULL){
             pair<bool,int> q=make_pair(true,root->data);
             return q;
        }
        
        pair<bool,int> left=isSumTreefast(root->left);
        pair<bool,int> right=isSumTreefast(root->right);
        
        bool l=left.first;
        bool r=right.first;
        bool sum=root->data==left.second+right.second;
        
        pair<bool,int> ans;
        if(l && r && sum){
            ans.first=true;
            ans.second=root->data+left.second+right.second;
        }
        else{
            ans.first=false;
            ans.second=root->data+left.second+right.second;
        }
        return ans;
    } 
    bool isSumTree(Node* root){
         return isSumTreefast(root).first;
    }
};