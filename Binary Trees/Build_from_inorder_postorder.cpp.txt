Node* solve(int in[], int post[], int n, int &index, int instart, int inend, map<int,int> &mapping){
        if(index<0 || instart>inend){
            return NULL;
        }
        
        int element=post[index--];
        Node* root=new Node(element);
        int pos=mapping[element];
        
        
        root->right=solve(in,post,n,index,pos+1,inend,mapping);
        root->left=solve(in,post,n,index,instart,pos-1,mapping);
        
        return root;
    }
Node *buildTree(int in[], int post[], int n) {
        int index=n-1;
        map<int,int> mapping;
        for(int i=0;i<n;i++){
            mapping[in[i]]=i;
        }
        Node* ans=solve(in,post,n,index,0,n-1,mapping);
        return ans;
}